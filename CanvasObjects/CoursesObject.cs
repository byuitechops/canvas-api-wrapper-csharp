// Generated by https://quicktype.io

namespace CanvasAPIWrapper
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class CoursesObject
    {
        [JsonProperty("id")]
        public long? Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("account_id")]
        public long? AccountId { get; set; }

        [JsonProperty("uuid")]
        public string Uuid { get; set; }

        [JsonProperty("start_at")]
        public DateTimeOffset? StartAt { get; set; }

        [JsonProperty("grading_standard_id")]
        public object GradingStandardId { get; set; }

        [JsonProperty("is_public")]
        public bool? IsPublic { get; set; }

        [JsonProperty("created_at")]
        public DateTimeOffset? CreatedAt { get; set; }

        [JsonProperty("course_code")]
        public string CourseCode { get; set; }

        [JsonProperty("default_view")]
        public string DefaultView { get; set; }

        [JsonProperty("root_account_id")]
        public long? RootAccountId { get; set; }

        [JsonProperty("enrollment_term_id")]
        public long? EnrollmentTermId { get; set; }

        [JsonProperty("license")]
        public string License { get; set; }

        [JsonProperty("end_at")]
        public DateTimeOffset? EndAt { get; set; }

        [JsonProperty("public_syllabus")]
        public bool? PublicSyllabus { get; set; }

        [JsonProperty("public_syllabus_to_auth")]
        public bool? PublicSyllabusToAuth { get; set; }

        [JsonProperty("storage_quota_mb")]
        public long? StorageQuotaMb { get; set; }

        [JsonProperty("is_public_to_auth_users")]
        public bool? IsPublicToAuthUsers { get; set; }

        [JsonProperty("hide_final_grades")]
        public bool? HideFinalGrades { get; set; }

        [JsonProperty("apply_assignment_group_weights")]
        public bool? ApplyAssignmentGroupWeights { get; set; }

        [JsonProperty("calendar")]
        public Calendar Calendar { get; set; }

        [JsonProperty("time_zone")]
        public string TimeZone { get; set; }

        [JsonProperty("blueprint")]
        public bool? Blueprint { get; set; }

        [JsonProperty("sis_course_id")]
        public string SisCourseId { get; set; }

        [JsonProperty("integration_id")]
        public object IntegrationId { get; set; }

        [JsonProperty("enrollments")]
        public object[] Enrollments { get; set; }

        [JsonProperty("workflow_state")]
        public string WorkflowState { get; set; }

        [JsonProperty("restrict_enrollments_to_course_dates")]
        public bool? RestrictEnrollmentsToCourseDates { get; set; }

        [JsonProperty("overridden_course_visibility")]
        public string OverriddenCourseVisibility { get; set; }
    }

    public partial class Calendar
    {
        [JsonProperty("ics")]
        public Uri Ics { get; set; }
    }

    public partial class CoursesObject
    {
        public static CoursesObject FromJson(string json) => JsonConvert.DeserializeObject<CoursesObject>(json, CanvasAPIWrapper.Converter.Settings);
        public override string ToString()
        {
            return $"Id: {Id}\nName: {Name}\nAccountId: {AccountId}";
        }
    }

    public static class Serialize
    {
        public static string ToJson(this CoursesObject self) => JsonConvert.SerializeObject(self, CanvasAPIWrapper.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters = {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
